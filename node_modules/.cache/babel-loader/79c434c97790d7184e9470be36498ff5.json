{"ast":null,"code":"var _jsxFileName = \"D:\\\\CC11D\\\\node\\\\todo-frontback\\\\cc11-basic-todo-list\\\\src\\\\contexts\\\\AuthContext.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\nfunction AuthContextProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isAuthenticated, setIsAuthenticate] = useState(false); //false => not login\n\n  useEffect(() => {\n    if (localStorage.getItem(\"accessToken\")) {\n      setIsAuthenticate(true);\n    }\n  }, []);\n\n  const login = () => {\n    setIsAuthenticate(true);\n  };\n\n  const logout = () => {\n    setIsAuthenticate(false);\n    localStorage.removeItem(\"accessToken\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthContextProvider, \"RfPey/I3FoedR6BZCZJs9+8q4zI=\");\n\n_c = AuthContextProvider;\nexport { AuthContext, AuthContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["D:/CC11D/node/todo-frontback/cc11-basic-todo-list/src/contexts/AuthContext.jsx"],"names":["createContext","useEffect","useState","AuthContext","AuthContextProvider","children","isAuthenticated","setIsAuthenticate","localStorage","getItem","login","logout","removeItem"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;;AAEA,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;;AAEA,SAASI,mBAAT,OAA2C;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACzC,QAAM,CAACC,eAAD,EAAkBC,iBAAlB,IAAuCL,QAAQ,CAAC,KAAD,CAArD,CADyC,CACqB;;AAE9DD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAJ,EAAyC;AACvCF,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMG,KAAK,GAAG,MAAM;AAClBH,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,GAFD;;AAIA,QAAMI,MAAM,GAAG,MAAM;AACnBJ,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAC,IAAAA,YAAY,CAACI,UAAb,CAAwB,aAAxB;AACD,GAHD;;AAKA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEN,MAAAA,eAAF;AAAmBI,MAAAA,KAAnB;AAA0BC,MAAAA;AAA1B,KAA7B;AAAA,cACGN;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAvBQD,mB;;KAAAA,mB;AAyBT,SAASD,WAAT,EAAsBC,mBAAtB","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nfunction AuthContextProvider({ children }) {\r\n  const [isAuthenticated, setIsAuthenticate] = useState(false); //false => not login\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"accessToken\")) {\r\n      setIsAuthenticate(true);\r\n    }\r\n  }, []);\r\n\r\n  const login = () => {\r\n    setIsAuthenticate(true);\r\n  };\r\n\r\n  const logout = () => {\r\n    setIsAuthenticate(false);\r\n    localStorage.removeItem(\"accessToken\");\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport { AuthContext, AuthContextProvider };\r\n"]},"metadata":{},"sourceType":"module"}