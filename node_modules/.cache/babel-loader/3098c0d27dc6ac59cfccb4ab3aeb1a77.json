{"ast":null,"code":"var _jsxFileName = \"D:\\\\CC11D\\\\node\\\\todo-frontback\\\\cc11-basic-todo-list\\\\src\\\\components\\\\todo-list\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport Button from \"../ui/Button\";\nimport TodoInput from \"./TodoInput\";\nimport { TodoContext } from \"../../contexts/TodoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Todo(props) {\n  _s();\n\n  const {\n    id,\n    title,\n    completed\n  } = props;\n  const [isEditing, setIsEditing] = useState(false);\n  const {\n    updateTodo,\n    removeTodo\n  } = useContext(TodoContext);\n\n  const closeEditing = () => {\n    setIsEditing(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: `list-group-item d-flex ${isEditing ? \"flex-column\" : \"align-items-center\"} p-3 bd-callout bd-callout-${completed ? \"success\" : \"warning\"}`,\n    children: isEditing ? /*#__PURE__*/_jsxDEV(TodoInput, {\n      id: id,\n      title: title,\n      completed: completed,\n      closeEditing: closeEditing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"flex-grow-1\",\n        role: \"button\",\n        onClick: () => setIsEditing(true),\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"outline-info\",\n          onClick: () => updateTodo({\n            title,\n            completed: !completed\n          }, id),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fa-solid fa-toggle-${completed ? \"on\" : \"off\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"danger\",\n          onClick: () => removeTodo(id),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-regular fa-trash-can\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Todo, \"ve6oDQzE+EnXWNKxrBQKehZETdU=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["D:/CC11D/node/todo-frontback/cc11-basic-todo-list/src/components/todo-list/Todo.js"],"names":["useState","useContext","Button","TodoInput","TodoContext","Todo","props","id","title","completed","isEditing","setIsEditing","updateTodo","removeTodo","closeEditing"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,WAAT,QAA4B,4BAA5B;;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA;AAAb,MAA2BH,KAAjC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAM;AAAEY,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA6BZ,UAAU,CAACG,WAAD,CAA7C;;AAEA,QAAMU,YAAY,GAAG,MAAM;AACzBH,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAFD;;AAIA,sBACE;AACE,IAAA,SAAS,EAAG,0BACVD,SAAS,GAAG,aAAH,GAAmB,oBAC7B,8BAA6BD,SAAS,GAAG,SAAH,GAAe,SAAU,EAHlE;AAAA,cAKGC,SAAS,gBACR,QAAC,SAAD;AACE,MAAA,EAAE,EAAEH,EADN;AAEE,MAAA,KAAK,EAAEC,KAFT;AAGE,MAAA,SAAS,EAAEC,SAHb;AAIE,MAAA,YAAY,EAAEK;AAJhB;AAAA;AAAA;AAAA;AAAA,YADQ,gBAQR;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,aADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAE,MAAMH,YAAY,CAAC,IAAD,CAH7B;AAAA,kBAKGH;AALH;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,KAAK,EAAC,cADR;AAEE,UAAA,OAAO,EAAE,MAAMI,UAAU,CAAC;AAAEJ,YAAAA,KAAF;AAASC,YAAAA,SAAS,EAAE,CAACA;AAArB,WAAD,EAAmCF,EAAnC,CAF3B;AAAA,iCAIE;AAAG,YAAA,SAAS,EAAG,sBAAqBE,SAAS,GAAG,IAAH,GAAU,KAAM;AAA7D;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAuB,UAAA,OAAO,EAAE,MAAMI,UAAU,CAACN,EAAD,CAAhD;AAAA,iCACE;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAbJ;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GA/CQF,I;;KAAAA,I;AAiDT,eAAeA,IAAf","sourcesContent":["import { useState, useContext } from \"react\";\r\nimport Button from \"../ui/Button\";\r\nimport TodoInput from \"./TodoInput\";\r\nimport { TodoContext } from \"../../contexts/TodoContext\";\r\n\r\nfunction Todo(props) {\r\n  const { id, title, completed } = props;\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const { updateTodo, removeTodo } = useContext(TodoContext);\r\n\r\n  const closeEditing = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <li\r\n      className={`list-group-item d-flex ${\r\n        isEditing ? \"flex-column\" : \"align-items-center\"\r\n      } p-3 bd-callout bd-callout-${completed ? \"success\" : \"warning\"}`}\r\n    >\r\n      {isEditing ? (\r\n        <TodoInput\r\n          id={id}\r\n          title={title}\r\n          completed={completed}\r\n          closeEditing={closeEditing}\r\n        />\r\n      ) : (\r\n        <>\r\n          <span\r\n            className=\"flex-grow-1\"\r\n            role=\"button\"\r\n            onClick={() => setIsEditing(true)}\r\n          >\r\n            {title}\r\n          </span>\r\n          <div className=\"btn-group\">\r\n            <Button\r\n              color=\"outline-info\"\r\n              onClick={() => updateTodo({ title, completed: !completed }, id)}\r\n            >\r\n              <i className={`fa-solid fa-toggle-${completed ? \"on\" : \"off\"}`} />\r\n            </Button>\r\n            <Button color=\"danger\" onClick={() => removeTodo(id)}>\r\n              <i className=\"fa-regular fa-trash-can\" />\r\n            </Button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n"]},"metadata":{},"sourceType":"module"}