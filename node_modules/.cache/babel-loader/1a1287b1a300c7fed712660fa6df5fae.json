{"ast":null,"code":"var _jsxFileName = \"D:\\\\CC11D\\\\node\\\\todo-frontback\\\\cc11-basic-todo-list\\\\src\\\\components\\\\todo-list\\\\TodoInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport Button from \"../ui/Button\";\nimport { TodoContext } from \"../../contexts/TodoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoInput(props) {\n  _s();\n\n  const [todoInput, setTodoInput] = useState(props.title || \"\");\n  const [todoError, setTodoError] = useState(\"\");\n  const {\n    createTodo,\n    updateTodo\n  } = useContext(TodoContext);\n\n  const handleSubmitForm = async e => {\n    e.preventDefault();\n  };\n\n  const handleClickCreateBtn = e => {\n    e.preventDefault();\n\n    if (!todoInput) {\n      setTodoError(\"Title is required.\");\n    } else {\n      createTodo(todoInput);\n      setTodoError(\"\");\n      setTodoInput(\"\");\n    }\n  };\n\n  const handleClickUpdateBtn = () => {\n    if (!todoInput) {\n      setTodoError(\"Title is required.\");\n    } else {\n      // props.updateTodo(\n      //   { title: todoInput, completed: props.completed },\n      //   props.id\n      // );\n      updateTodo({\n        title: todoInput,\n        completed: props.completed\n      }, props.id);\n      props.closeEditing();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: `form-control ${todoError ? \"is-invalid\" : \"\"}`,\n        placeholder: \"Enter new todo\",\n        value: todoInput,\n        onChange: event => setTodoInput(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), props.id ? /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: handleClickUpdateBtn,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        color: \"success\",\n        onClick: handleClickCreateBtn,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"outline-secondary\",\n        onClick: () => {\n          if (props.id) {\n            props.closeEditing();\n          } else {\n            setTodoInput(\"\");\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-xmark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), todoError && /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"text-danger\",\n      children: todoError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TodoInput, \"V7DFjPnB/IfvcHMb9RHUb52BnKI=\");\n\n_c = TodoInput;\nexport default TodoInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoInput\");","map":{"version":3,"sources":["D:/CC11D/node/todo-frontback/cc11-basic-todo-list/src/components/todo-list/TodoInput.js"],"names":["useState","useContext","Button","TodoContext","TodoInput","props","todoInput","setTodoInput","title","todoError","setTodoError","createTodo","updateTodo","handleSubmitForm","e","preventDefault","handleClickCreateBtn","handleClickUpdateBtn","completed","id","closeEditing","event","target","value"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,WAAT,QAA4B,4BAA5B;;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAACK,KAAK,CAACG,KAAN,IAAe,EAAhB,CAA1C;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM;AAAEW,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA6BX,UAAU,CAACE,WAAD,CAA7C;;AAEA,QAAMU,gBAAgB,GAAG,MAAOC,CAAP,IAAa;AACpCA,IAAAA,CAAC,CAACC,cAAF;AACD,GAFD;;AAIA,QAAMC,oBAAoB,GAAIF,CAAD,IAAO;AAClCA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAI,CAACT,SAAL,EAAgB;AACdI,MAAAA,YAAY,CAAC,oBAAD,CAAZ;AACD,KAFD,MAEO;AACLC,MAAAA,UAAU,CAACL,SAAD,CAAV;AACAI,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACAH,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;AACF,GAVD;;AAYA,QAAMU,oBAAoB,GAAG,MAAM;AACjC,QAAI,CAACX,SAAL,EAAgB;AACdI,MAAAA,YAAY,CAAC,oBAAD,CAAZ;AACD,KAFD,MAEO;AACL;AACA;AACA;AACA;AACAE,MAAAA,UAAU,CAAC;AAAEJ,QAAAA,KAAK,EAAEF,SAAT;AAAoBY,QAAAA,SAAS,EAAEb,KAAK,CAACa;AAArC,OAAD,EAAmDb,KAAK,CAACc,EAAzD,CAAV;AACAd,MAAAA,KAAK,CAACe,YAAN;AACD;AACF,GAXD;;AAaA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAG,gBAAeX,SAAS,GAAG,YAAH,GAAkB,EAAG,EAF3D;AAGE,QAAA,WAAW,EAAC,gBAHd;AAIE,QAAA,KAAK,EAAEH,SAJT;AAKE,QAAA,QAAQ,EAAGe,KAAD,IAAWd,YAAY,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd;AALnC;AAAA;AAAA;AAAA;AAAA,cADF,EAQGlB,KAAK,CAACc,EAAN,gBACC,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAEF,oBAAjC;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,gBAKC,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAED,oBAAjC;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAbJ,eAiBE,QAAC,MAAD;AACE,QAAA,KAAK,EAAC,mBADR;AAEE,QAAA,OAAO,EAAE,MAAM;AACb,cAAIX,KAAK,CAACc,EAAV,EAAc;AACZd,YAAAA,KAAK,CAACe,YAAN;AACD,WAFD,MAEO;AACLb,YAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;AACF,SARH;AAAA,+BAUE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EA+BGE,SAAS,iBAAI;AAAO,MAAA,SAAS,EAAC,aAAjB;AAAA,gBAAgCA;AAAhC;AAAA;AAAA;AAAA;AAAA,YA/BhB;AAAA,kBADF;AAmCD;;GAtEQL,S;;KAAAA,S;AAwET,eAAeA,SAAf","sourcesContent":["import { useState, useContext } from \"react\";\r\nimport Button from \"../ui/Button\";\r\nimport { TodoContext } from \"../../contexts/TodoContext\";\r\n\r\nfunction TodoInput(props) {\r\n  const [todoInput, setTodoInput] = useState(props.title || \"\");\r\n  const [todoError, setTodoError] = useState(\"\");\r\n\r\n  const { createTodo, updateTodo } = useContext(TodoContext);\r\n\r\n  const handleSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleClickCreateBtn = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!todoInput) {\r\n      setTodoError(\"Title is required.\");\r\n    } else {\r\n      createTodo(todoInput);\r\n      setTodoError(\"\");\r\n      setTodoInput(\"\");\r\n    }\r\n  };\r\n\r\n  const handleClickUpdateBtn = () => {\r\n    if (!todoInput) {\r\n      setTodoError(\"Title is required.\");\r\n    } else {\r\n      // props.updateTodo(\r\n      //   { title: todoInput, completed: props.completed },\r\n      //   props.id\r\n      // );\r\n      updateTodo({ title: todoInput, completed: props.completed }, props.id);\r\n      props.closeEditing();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"input-group shadow\">\r\n        <input\r\n          type=\"text\"\r\n          className={`form-control ${todoError ? \"is-invalid\" : \"\"}`}\r\n          placeholder=\"Enter new todo\"\r\n          value={todoInput}\r\n          onChange={(event) => setTodoInput(event.target.value)}\r\n        />\r\n        {props.id ? (\r\n          <Button color=\"primary\" onClick={handleClickUpdateBtn}>\r\n            <i className=\"fa-solid fa-check\" />\r\n          </Button>\r\n        ) : (\r\n          <Button color=\"success\" onClick={handleClickCreateBtn}>\r\n            <i className=\"fa-solid fa-plus\" />\r\n          </Button>\r\n        )}\r\n        <Button\r\n          color=\"outline-secondary\"\r\n          onClick={() => {\r\n            if (props.id) {\r\n              props.closeEditing();\r\n            } else {\r\n              setTodoInput(\"\");\r\n            }\r\n          }}\r\n        >\r\n          <i className=\"fa-solid fa-xmark\" />\r\n        </Button>\r\n      </div>\r\n      {todoError && <small className=\"text-danger\">{todoError}</small>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoInput;\r\n"]},"metadata":{},"sourceType":"module"}