{"ast":null,"code":"var _jsxFileName = \"D:\\\\CC11D\\\\node\\\\todo-frontback\\\\cc11-basic-todo-list\\\\src\\\\contexts\\\\TodoContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport axios from \"../config/axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoContext = /*#__PURE__*/createContext();\n\nfunction TodoContextProvider(props) {\n  _s();\n\n  const [todoList, setTodoList] = useState([]);\n  console.log(todoList);\n\n  const createTodo = title => {\n    axios.post(\"/todos\", {\n      title,\n      completed: false\n    }, {\n      headers: {\n        authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n      }\n    }).then(res => {\n      const newTodo = res.data.todo;\n      const newTodoList = [newTodo, ...todoList];\n      setTodoList(newTodoList);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const removeTodo = id => {\n    axios.delete(`/todos/${id}`).then(() => {\n      const idx = todoList.findIndex(el => el.id === id);\n\n      if (idx !== -1) {\n        const clonedTodoList = [...todoList];\n        clonedTodoList.splice(idx, 1);\n        setTodoList(clonedTodoList);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const updateTodo = (newValue, id) => {\n    axios.put(\"/todos/\" + id, newValue).then(() => {\n      const idx = todoList.findIndex(el => el.id === id);\n\n      if (idx !== -1) {\n        const clonedTodoList = [...todoList];\n        clonedTodoList[idx] = { ...clonedTodoList[idx],\n          ...newValue\n        };\n        setTodoList(clonedTodoList);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    axios.get(\"/todos\", {\n      headers: {\n        authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n      }\n    }).then(res => {\n      setTodoList(res.data.todos);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: {\n      todoList,\n      createTodo,\n      removeTodo,\n      updateTodo\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoContextProvider, \"hGGsNTuaOn7oyphipNa0xsYj1Yc=\");\n\n_c = TodoContextProvider;\nexport { TodoContext, TodoContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoContextProvider\");","map":{"version":3,"sources":["D:/CC11D/node/todo-frontback/cc11-basic-todo-list/src/contexts/TodoContext.js"],"names":["createContext","useState","useEffect","axios","TodoContext","TodoContextProvider","props","todoList","setTodoList","console","log","createTodo","title","post","completed","headers","authorization","localStorage","getItem","then","res","newTodo","data","todo","newTodoList","catch","err","removeTodo","id","delete","idx","findIndex","el","clonedTodoList","splice","updateTodo","newValue","put","get","todos","children"],"mappings":"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","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"../config/axios\";\r\n\r\nconst TodoContext = createContext();\r\n\r\nfunction TodoContextProvider(props) {\r\n  const [todoList, setTodoList] = useState([]);\r\n  console.log(todoList);\r\n\r\n  const createTodo = (title) => {\r\n    axios\r\n      .post(\r\n        \"/todos\",\r\n        { title, completed: false },\r\n        {\r\n          headers: {\r\n            authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        const newTodo = res.data.todo;\r\n        const newTodoList = [newTodo, ...todoList];\r\n        setTodoList(newTodoList);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const removeTodo = (id) => {\r\n    axios\r\n      .delete(`/todos/${id}`)\r\n      .then(() => {\r\n        const idx = todoList.findIndex((el) => el.id === id);\r\n        if (idx !== -1) {\r\n          const clonedTodoList = [...todoList];\r\n          clonedTodoList.splice(idx, 1);\r\n          setTodoList(clonedTodoList);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const updateTodo = (newValue, id) => {\r\n    axios\r\n      .put(\"/todos/\" + id, newValue)\r\n      .then(() => {\r\n        const idx = todoList.findIndex((el) => el.id === id);\r\n        if (idx !== -1) {\r\n          const clonedTodoList = [...todoList];\r\n          clonedTodoList[idx] = { ...clonedTodoList[idx], ...newValue };\r\n          setTodoList(clonedTodoList);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/todos\", {\r\n        headers: {\r\n          authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setTodoList(res.data.todos);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <TodoContext.Provider\r\n      value={{ todoList, createTodo, removeTodo, updateTodo }}\r\n    >\r\n      {props.children}\r\n    </TodoContext.Provider>\r\n  );\r\n}\r\n\r\nexport { TodoContext, TodoContextProvider };\r\n"]},"metadata":{},"sourceType":"module"}