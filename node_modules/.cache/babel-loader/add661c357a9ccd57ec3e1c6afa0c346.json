{"ast":null,"code":"var _jsxFileName = \"D:\\\\CC11D\\\\node\\\\todo-frontback\\\\cc11-basic-todo-list\\\\src\\\\components\\\\auth\\\\RegisterForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { validateRegister } from \"../../services/validate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(validateRegister);\n\nfunction RegisterForm() {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [err, setError] = useState({});\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    const errResult = validateRegister({\n      username,\n      email,\n      password,\n      confirmPassword\n    });\n    setError(errResult);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border border-1 rounded-3 p-4 bg-white shadow-sm\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          className: \"form-label\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: `form-control ${err.username ? \" is-invalid\" : \"\"}`,\n          id: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), err.username && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: err.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"form-label\",\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: `form-control ${err.email ? \" is-invalid\" : \"\"}`,\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), err.email && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: err.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"form-label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: `form-control ${err.password ? \" is-invalid\" : \"\"}`,\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), err.password && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: err.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirm-password\",\n          className: \"form-label\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: `form-control ${err.confirmPassword ? \" is-invalid\" : \"\"}`,\n          id: \"confirm-password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), err.confirmPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: err.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary m-3\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterForm, \"cQYzuo5N6ghxXrpXxU2ywqhspXE=\");\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["D:/CC11D/node/todo-frontback/cc11-basic-todo-list/src/components/auth/RegisterForm.jsx"],"names":["React","useState","validateRegister","console","log","RegisterForm","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","err","setError","handleSubmitForm","e","preventDefault","errResult","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { validateRegister } from \"../../services/validate\";\r\nconsole.log(validateRegister);\r\n\r\nfunction RegisterForm() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const [err, setError] = useState({});\r\n\r\n  const handleSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    const errResult = validateRegister({\r\n      username,\r\n      email,\r\n      password,\r\n      confirmPassword,\r\n    });\r\n    setError(errResult);\r\n  };\r\n\r\n  return (\r\n    <div className=\"border border-1 rounded-3 p-4 bg-white shadow-sm\">\r\n      <form onSubmit={handleSubmitForm}>\r\n        {/* username */}\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"username\" className=\"form-label\">\r\n            Username\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className={`form-control ${err.username ? \" is-invalid\" : \"\"}`}\r\n            id=\"username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          {err.username && (\r\n            <div className=\"invalid-feedback\">{err.username}</div>\r\n          )}\r\n        </div>\r\n        {/* email */}\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"email\" className=\"form-label\">\r\n            Email address\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className={`form-control ${err.email ? \" is-invalid\" : \"\"}`}\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          {err.email && <div className=\"invalid-feedback\">{err.email}</div>}\r\n        </div>\r\n\r\n        {/* password */}\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"password\" className=\"form-label\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            className={`form-control ${err.password ? \" is-invalid\" : \"\"}`}\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          {err.password && (\r\n            <div className=\"invalid-feedback\">{err.password}</div>\r\n          )}\r\n        </div>\r\n\r\n        {/* confirm password */}\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"confirm-password\" className=\"form-label\">\r\n            Confirm Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            className={`form-control ${\r\n              err.confirmPassword ? \" is-invalid\" : \"\"\r\n            }`}\r\n            id=\"confirm-password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n          {err.confirmPassword && (\r\n            <div className=\"invalid-feedback\">{err.confirmPassword}</div>\r\n          )}\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary m-3\">\r\n          Register\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterForm;\r\n"]},"metadata":{},"sourceType":"module"}